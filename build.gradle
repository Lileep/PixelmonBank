buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://files.minecraftforge.net/maven' }
        maven { url 'https://maven.minecraftforge.net/' }
        mavenCentral()
        flatDir {
            dirs 'libs'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }
}

allprojects {
    repositories {
        maven { url = "https://jitpack.io" }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: "com.github.johnrengelman.shadow"

version = '1.4.1'
group = 'com.github.lileep'
archivesBaseName = 'PixelmonBank'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    compile files('libs/Pixelmon-1.12.2-8.4.3-server.jar')

    shadow 'mysql:mysql-connector-java:8.0.+'

    shadow group: 'com.github.Pixelmon-Development.API', name: 'commons', version: '2.3.0'
    shadow group: 'com.github.Pixelmon-Development.API', name: 'forge', version: '2.3.0'
    shadow group: 'com.github.Pixelmon-Development.API', name: 'reforged', version: '2.3.0'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "pixelmonbank",
                "Specification-Vendor"    : "pixelmonbanksareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "pixelmonbanksareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {

    configurations = [project.configurations.shadow]

    relocate('com.envyful.api', 'com.github.lileep.pixelmonbank.shade.envy.api')
    relocate('com.google.gson', 'com.github.lileep.pixelmonbank.shade.gson')
    relocate('com.zaxxer', 'com.github.lileep.pixelmonbank.shade.hikari')
    relocate('io.leangen.geantyref', 'com.github.lileep.pixelmonbank.shade.geantyref')
    relocate('org.slf4j', 'com.github.lileep.pixelmonbank.shade.slf4j')
    relocate('org.spongepowered.configurate', 'com.github.lileep.pixelmonbank.shade.configurate')
    relocate('org.yaml.snakeyaml', 'com.github.lileep.pixelmonbank.shade.snakeyaml')
    relocate('org.checkerframework', 'com.github.lileep.pixelmonbank.shade.checkerframework')

    exclude "**/module-info.class"
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
